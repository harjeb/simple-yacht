rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ===== 用户数据规则 (保持宽松但安全) =====
    match /users/{userId} {
      // 允许认证用户读取用户数据（用于查询、匹配、排行榜等）
      allow read: if request.auth != null;
      
      // 用户只能写入自己的数据
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // 或者如果写入也有问题，可以完全放开（仅开发环境）
      // allow write: if request.auth != null;
    }
    
    // ===== 游戏房间规则 =====
    match /gameRooms/{roomId} {
      // 允许创建：用户必须是房主
      allow create: if request.auth != null && request.resource.data.hostId == request.auth.uid;
      
      // 允许读取：用户必须是房主或访客
      allow read: if request.auth != null &&
                     (resource.data.hostId == request.auth.uid || resource.data.guestId == request.auth.uid);
                     
      // 允许更新：用户必须是房主或访客
      // 进一步限制：关键字段（如 hostId, createdAt）不应被客户端直接修改
      // guestId 可以从 null 更新为加入者的 UID
      allow update: if request.auth != null &&
                      (resource.data.hostId == request.auth.uid || resource.data.guestId == request.auth.uid || resource.data.guestId == null) && // Allow update if user is host, current guest, OR if guestId is null (joining)
                      // 防止修改不可变字段
                      request.resource.data.hostId == resource.data.hostId &&
                      // 允许 guestId 从 null 更新为 request.auth.uid，或者如果 guestId 已存在，则不允许更改 (除非是房主操作，可能需要云函数来处理踢人等复杂逻辑)
                      ( (resource.data.guestId == null && request.resource.data.guestId == request.auth.uid) || 
                        (resource.data.guestId != null && request.resource.data.guestId == resource.data.guestId) ||
                        (resource.data.guestId != null && request.auth.uid == resource.data.hostId) // Host can change guestId (e.g. kick)
                      ) &&
                      request.resource.data.createdAt == resource.data.createdAt;
                      
      // 允许删除：只允许房主删除
      allow delete: if request.auth != null && resource.data.hostId == request.auth.uid;
    }
    
    // ===== 匹配队列规则 =====
    match /matchmakingQueue/{queueId} {
      allow read, write: if request.auth != null;
    }
    
    // ===== 多人游戏规则 =====
    match /multiplayerGames/{gameId} {
      allow read, write: if request.auth != null;
    }
    
    // ===== ELO 评分规则 =====
    match /eloRatings/{userId} {
      allow read, write: if request.auth != null;
    }
    
    // ===== 排行榜规则 =====
    match /leaderboards/{leaderboardType}/scores/{scoreId} {
      allow read: if request.auth != null;
      allow write: if false; // 只能通过 Cloud Functions 操作
    }
    
    // ===== 用户名唯一性集合 =====
    match /usernames/{normalizedUsername} {
      allow read: if request.auth != null;
      allow write: if false; // 只能通过 Cloud Functions 操作
    }
    
    // ===== 好友系统规则 =====
    match /friendships/{friendshipId} {
      allow read, write: if request.auth != null;
    }
    
    // ===== ELO历史规则 =====
    match /eloHistory/{userId}/matches/{matchId} {
      allow read: if request.auth != null;
      allow write: if false; // 只能通过 Cloud Functions 操作
    }
    
    // ===== 游戏统计规则 =====
    match /gameStats/{userId} {
      allow read: if request.auth != null;
      allow write: if false; // 只能通过 Cloud Functions 操作
    }
    
    // ===== 聊天消息规则 =====
    match /gameRooms/{roomId}/messages/{messageId} {
      allow read, write: if request.auth != null;
    }
    
    // ===== 系统配置规则 =====
    match /systemConfig/{configId} {
      allow read: if request.auth != null;
      allow write: if false; // 只能通过管理员操作
    }
    
    // ===== 匹配统计规则 =====
    match /matchmakingStats/{statId} {
      allow read: if request.auth != null;
      allow write: if false; // 只能通过 Cloud Functions 操作
    }
    
    // ===== 排行榜缓存规则 =====
    match /leaderboardCache/{leaderboardType} {
      allow read: if request.auth != null;
      allow write: if false; // 只能通过 Cloud Functions 操作
    }
    
    // ===== 天梯统计规则 =====
    match /ladderStats/{statType} {
      allow read: if request.auth != null;
      allow write: if false; // 只能通过 Cloud Functions 操作
    }
  }
}